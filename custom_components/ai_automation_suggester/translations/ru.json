{
  "title": "AI Automation Suggester",
  "config": {
    "step": {
      "user": {
        "title": "Select AI Provider",
        "data": {
          "provider": "AI Provider"
        }
      },
      "openai": {
        "title": "Configure OpenAI"
      },
      "anthropic": {
        "title": "Configure Anthropic"
      },
      "google": {
        "title": "Configure Google"
      },
      "groq": {
        "title": "Configure Groq"
      },
      "localai": {
        "title": "Configure LocalAI",
        "data": {
          "localai_ip": "LocalAI IP Address",
          "localai_port": "LocalAI Port",
          "localai_https": "Use HTTPS for LocalAI"
        }
      },
      "ollama": {
        "title": "Configure Ollama",
        "data": {
          "ollama_ip": "Ollama IP Address",
          "ollama_port": "Ollama Port",
          "ollama_https": "Use HTTPS for Ollama",
          "ollama_disable_think": "Disable Think Mode (Ollama)"
        }
      },
      "custom_openai": {
        "title": "Configure Custom OpenAI",
        "data": {
          "custom_openai_endpoint": "Custom OpenAI Endpoint",
          "custom_openai_api_key": "Custom OpenAI API Key (Optional)"
        }
      },
      "mistral": {
        "title": "Configure Mistral AI"
      },
      "perplexity": {
        "title": "Configure Perplexity AI"
      },
      "openrouter": {
        "title": "Configure OpenRouter",
        "data": {
          "openrouter_reasoning_max_tokens": "OpenRouter Reasoning Max Tokens"
        }
      },
      "openai_azure": {
        "title": "Configure OpenAI Azure",
        "data": {
          "openai_azure_deployment_id": "Azure Deployment ID",
          "openai_azure_endpoint": "Azure Endpoint",
          "openai_azure_api_version": "Azure API Version"
        }
      },
      "generic_openai": {
        "title": "Configure Generic OpenAI",
        "data": {
          "generic_openai_api_endpoint": "Generic OpenAI API Full URL (should end with 'completions')",
          "generic_openai_api_key": "Generic OpenAI API Key (Optional)",
          "generic_openai_validation_endpoint": "Validation URL (should end with 'models')",
          "generic_openai_enable_validation": "Enable Validation"
        }
      },
      "common": {
        "title": "Configure Common Settings",
        "data": {
          "api_key": "API Key",
          "model": "Model",
          "temperature": "Temperature",
          "max_input_tokens": "Max Input Tokens",
          "max_output_tokens": "Max Output Tokens"
        }
      }
    },
    "error": {
      "api_error": "API validation failed: {error_message}",
      "cannot_connect": "Failed to connect. Please check your settings and network.",
      "unknown": "An unknown error occurred. Please check logs for details."
    },
    "abort": {
      "already_configured": "This AI provider is already configured. You can edit it from the integrations page."
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "Параметры подсказчика автоматизации AI",
        "data": {
          "api_key": "Ключ API",
          "model": "Модель",
          "temperature": "Температура",
          "max_input_tokens": "Максимальное количество входных токенов",
          "max_output_tokens": "Максимальное количество выходных токенов",
          "localai_ip": "IP-адрес LocalAI",
          "localai_port": "Порт LocalAI",
          "localai_https": "Использовать HTTPS для LocalAI",
          "ollama_ip": "IP-адрес Ollama",
          "ollama_port": "Порт Ollama",
          "ollama_https": "Использовать HTTPS для Ollama",
          "ollama_disable_think": "Отключить режим мышления (Ollama)",
          "custom_openai_endpoint": "Пользовательская конечная точка OpenAI",
          "custom_openai_api_key": "Пользовательский ключ API OpenAI",
          "openrouter_reasoning_max_tokens": "Максимальное количество токенов для рассуждений OpenRouter",
          "openai_azure_deployment_id": "Идентификатор развертывания Azure",
          "openai_azure_endpoint": "Конечная точка Azure",
          "openai_azure_api_version": "Версия API Azure",
          "generic_openai_api_endpoint": "Полный URL-адрес универсального API OpenAI (должен заканчиваться на 'completions')",
          "generic_openai_api_key": "Универсальный ключ API OpenAI",
          "generic_openai_validation_endpoint": "URL-адрес для проверки (универсальный OpenAI, должен заканчиваться на 'models')",
          "generic_openai_enable_validation": "Включить проверку (универсальный OpenAI)"
        },
        "description": "Настройте параметры для своих поставщиков ИИ. Будут использоваться поля, относящиеся к вашему настроенному поставщику. Общие параметры, такие как ограничения токенов, настраиваются для каждого поставщика."
      }
    },
    "error": {
      "invalid_input": "One or more values are invalid."
    }
  },
  "services": {
    "generate_suggestions": {
      "name": "Generate Suggestions",
      "description": "Manually trigger AI automation suggestions.",
      "fields": {
        "provider_config": {
          "name": "Provider Configuration",
          "description": "Which provider configuration to use (if you have multiple)"
        },
        "custom_prompt": {
          "name": "Custom Prompt",
          "description": "Optional custom prompt to override the default system prompt or guide the suggestions towards specific themes"
        },
        "all_entities": {
          "name": "Consider All Entities",
          "description": "If true, consider all entities instead of just new entities."
        },
        "domains": {
          "name": "Domains",
          "description": "List of domains to consider. If empty, consider all domains."
        },
        "entity_limit": {
          "name": "Entity Limit",
          "description": "Maximum number of entities to consider (randomly selected)."
        },
        "automation_read_yaml": {
          "name": "Read 'automations.yaml' file",
          "description": "Reads and appends the YAML code of the automations found in the 'automations.yaml' file. This action will use a lot of input tokens, use it with care and with models with a large context window (e.g. Gemini)."
        },
        "automation_limit": {
          "name": "Лимит автоматизаций",
          "description": "Максимальное количество автоматизаций для анализа (по умолчанию: 100)."
        },
        "include_entity_details": {
          "name": "Включить детали сущностей",
          "description": "Включать подробную информацию о сущностях (атрибуты и информация об устройстве) в запрос. Отключение снижает использование токенов, но предоставляет меньше контекста ИИ."
        }
      }
    }
  }
}